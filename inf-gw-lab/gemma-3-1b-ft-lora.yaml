---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-gemma-3-1b-ft-lora
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vllm-gemma-3-1b-ft-lora
  template:
    metadata:
      labels:
        app: vllm-gemma-3-1b-ft-lora
      annotations:
        gke-gcsfuse/volumes: "true"
    spec:
      serviceAccountName: default
      containers:
        - name: inference-server
          image: vllm/vllm-openai:v0.8.5.post1
          resources:
            requests:
              cpu: "2"
              memory: "25Gi"
              ephemeral-storage: 10Gi
              nvidia.com/gpu: "1"
            limits:
              cpu: "2"
              memory: "25Gi"
              ephemeral-storage: 10Gi
              nvidia.com/gpu: "1"
          args:
            - "--model=$(MODEL)"
            - "--tensor-parallel-size"
            - "1"
            - "--port"
            - "8000"
            - "--enable-lora"
            - "--max-loras"
            - "1"
            - "--max-lora-rank"
            - "64"
            - "--lora-modules"
            - '{"name": "math", "path": "/gcs/$LORA_PATH", "base_model_name": "gemma-3"}'
          env:
            - name: MODEL
              value: google/gemma-3-1b-it
            - name: HUGGING_FACE_HUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hf-secret
                  key: hf_api_token
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - name: gcs-fuse-csi-ephemeral
              mountPath: /gcs
              readOnly: true
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          lifecycle:
            preStop:
              sleep:
                seconds: 30
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 3600
            initialDelaySeconds: 2
            periodSeconds: 1
            httpGet:
              path: /health
              port: http
              scheme: HTTP
      volumes:
        - name: dshm
          emptyDir:
              medium: Memory
        - name: gcs-fuse-csi-ephemeral
          csi:
            driver: gcsfuse.csi.storage.gke.io
            volumeAttributes:
              bucketName: $BUCKET
              mountOptions: "metadata-cache:ttl-secs:-1,metadata-cache:stat-cache-max-size-mb:-1,metadata-cache:type-cache-max-size-mb:-1,file-cache:max-size-mb:-1,file-cache:cache-file-for-range-read:true,file-cache:enable-parallel-downloads:true,file-system:kernel-list-cache-ttl-secs:-1,gcs-connection:client-protocol:grpc"
              skipCSIBucketAccessCheck: "true"
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-l4
        # need this, otherwise get a CUDA OOM on older driver
        cloud.google.com/gke-gpu-driver-version: "latest"
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-gemma-3-1b-ft-lora
spec:
  selector:
    app: vllm-gemma-3-1b-ft-lora
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vllm-gemma-3-1b-ft-lora
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vllm-gemma-3-1b-ft-lora
  minReplicas: 1
  maxReplicas: 2
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 60
  metrics:
    - type: External
      external:
        metric:
          name: prometheus.googleapis.com|inference_pool_average_kv_cache_utilization|gauge
          selector:
            matchLabels:
              metric.labels.name: vllm-gemma-3-1b-ft-lora
        target:
          type: AverageValue
          averageValue: 10m
